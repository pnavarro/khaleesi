---
- include: "{{ base_dir }}/khaleesi/playbooks/group_by.yml ansible_ssh_user=root"

- name: Setup openstack repos
  hosts: "{{ repo_host }}:&RedHat"
  vars:
    - ansible_ssh_user: root
    - repos:
        7-director:
          - rhel-7-server-rpms
          - rhel-7-server-extras-rpms
          - rhel-7-server-openstack-7.0-rpms
          - rhel-7-server-openstack-7.0-director-rpms
          - rhel-7-server-rh-common-rpms
        8-director:
          - rhel-7-server-rpms
          - rhel-7-server-extras-rpms
          - rhel-7-server-openstack-8-rpms
          - rhel-7-server-openstack-8-director-rpms
          - rhel-7-server-rh-common-rpms

  environment:
      http_proxy: "{{ installer.http_proxy_url }}"
  gather_facts: yes
  tasks:
      - name: Register system with RHN
      redhat_subscription: state=present
                           username= !lookup private.distro.rhel.subscription.username
                           password= !lookup private.distro.rhel.subscription.password
                           pool= !lookup private.distro.rhel.subscription.pool
                           autosubscribe=true

      - name: Disable all repos
        command: subscription-manager repos --disable=* creates=/tmp/.repos-disabled-enabled
        register: disable_repo_result

      - set_fact:
          repos_to_enable: "{{ repos[product.full_version]}}"

      - set_fact:
          rhsm_enable_repos: |
                  {% for item in repos_to_enable %}
                    --enable={{ item }}
                  {%- endfor %}

      - name: Enable required repos
        command: subscription-manager repos {{ rhsm_enable_repos }} creates=/tmp/.repos-disabled-enabled
        register: enable_repo_result

      - name: Create a semaphore for repos disable/enable
        file: dest=/tmp/.repos-disabled-enabled owner=stack group=stack state=touch
        when: disable_repo_result.rc == 0 and enable_repo_result.rc == 0

- name: Linux common prep (Collect performance data, etc.)
  hosts: "{{ repo_host }}"
  vars:
    - ansible_ssh_user: root
  roles:
    - { role: linux-common }

- name: Update packages on the host
  hosts: "{{ repo_host }}"
  vars:
    - ansible_ssh_user: root
  tasks:
    - name: repolist
      command: yum -d 7 repolist

    - name: update all packages
      yum: name=* state=latest
      when: yum_update | bool

    - name: Find if a new kernel was installed
      shell: find /boot/ -anewer /proc/1/stat -name 'initramfs*' | egrep ".*"
      register: new_kernel
      ignore_errors: true
      when: "'{{ repo_host }}' == 'virthost'"

    - name: reboot host
      sudo: no
      local_action:
        wait_for_ssh
          reboot_first=true
          host="{{ ansible_ssh_host }}"
          user="root"
          key="{{ ansible_ssh_private_key_file }}"
          timeout=900
          sudo=false
      when: "'{{ repo_host }}' == 'virthost' and new_kernel.rc == 0"
